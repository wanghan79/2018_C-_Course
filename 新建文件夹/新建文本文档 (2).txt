using System;

using System.Collections.Generic;

using System.Linq;

using System.Text;

using System.Threading.Tasks;

using System.Data;

using System.Data.Sql;

using System.Data.SqlClient;

using System.Windows.Forms;

 
namespace WindowsFormsApp3

{
   
 class SqlHelp
  
  {
  
      /// <summary>
 
       /// DataSource : MY-LAPTOP
 
       /// Initial Catalog: Test
  
      /// User ID:

        /// Password:

        /// </summary>
 
       
        private const string connectionString = @"Data Source=MY-LAPTOP;Initial Catalog=Test;Integrated Security = SSPI";

        
        public SqlHelp() { }

 
        public static SqlConnection conn;
 

        //打开数据库连接
 
       public static void OpenConn()
 
       {
 
           string SqlCon = connectionString;//数据库连接字符串

            conn = new SqlConnection(SqlCon);

            if (conn.State==ConnectionState.Closed)

            {
 
               conn.Open();

            }
 
       }
   
     //关闭数据库连接
 
       public static void CloseConn() 
{
     
       if(conn.State.ToString().ToLower() == "open")
 
           {
  
              conn.Close();
 
               conn.Dispose();

            }
 
       }
       
 //读取数据
   
     public static SqlDataReader GetDataReaderValue(string sql)
 {
    
        OpenConn();

            SqlCommand cmd = new SqlCommand(sql,conn);
 
           SqlDataReader dr = cmd.ExecuteReader();
 
           CloseConn();
 
           return dr;
  
      }
    
    //返回DataSet
 
       public static DataSet GetDataSetValue(string sql, string tableName)
 {
   
         OpenConn();
  
          SqlDataAdapter da = new SqlDataAdapter(sql,conn);

            DataSet ds = new DataSet();
 
           da.Fill(ds, tableName);
 
           CloseConn();

            return ds;
 
       }
        //返回DataView
  
      public static DataView GetDataViewValue(string sql)
 {
         
   OpenConn();
 
            SqlDataAdapter da;
            DataSet ds = new DataSet();

            da = new SqlDataAdapter(sql, conn);

            da.Fill(ds, "temp");
 
           CloseConn();
 
           return ds.Tables[0].DefaultView;
 
       }
        //返回DataTable
 
       public static DataTable GetDataTableValue(string sql) 
{
   
         OpenConn();

            SqlDataAdapter da = new SqlDataAdapter(sql,conn);

            DataTable dt = new DataTable();

            da.Fill(dt);

            CloseConn();

            return dt;
        }
        //执行一个Sql操作：添加，删除，更新操作

        public void ExecuteNonQuery(string sql)

        {

            OpenConn();

            SqlCommand cmd;

            cmd = new SqlCommand(sql, conn);

            cmd.ExecuteNonQuery();

            cmd.Dispose();

            CloseConn();
 
       }
  
      //执行一个Sql操作：添加，删除，更新操作，返回受影响行数

        public int ExecuteNonQueryCount(string sql)

        {
 
           OpenConn();
 
           SqlCommand cmd;

            cmd = new SqlCommand(sql, conn);

            int value = cmd.ExecuteNonQuery();

            return value;

        }
    
    //执行一条返回第一条记录第一列的SqlCommand命令

        public object ExecuteScalar(string sql)

        {
 
           OpenConn();

            SqlCommand cmd = new SqlCommand(sql, conn);

            object value = cmd.ExecuteScalar();

            return value;
 
       }
       
 //返回记录数

        public int SqlServerRecordCount(string sql)

        {

            OpenConn();

            SqlCommand cmd = new SqlCommand();

            cmd.CommandText = sql;

            cmd.Connection = conn;

            SqlDataReader dr;

            dr = cmd.ExecuteReader();

            int RecordCount = 0;

            while (dr.Read())

            {
 
               RecordCount++;
 
           }
 
           CloseConn();

            return RecordCount;

        }
 
       //判断是否为数字

        public static bool GetSafeValue(string value)

        {
 
           if (string.IsNullOrEmpty(value))

            {
 
               return false;

            }
 
           foreach (char ch in value)
 
           {
 
               if (!char.IsDigit(ch))

                {

                    return false;

                }
 
           }

            return true;

        }

        
    }

